/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package consultas;

import clases.MySqlConn;
import hotel.P7_Consulta_Menu;
import java.awt.Color;
import java.awt.Image;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Cesar
 */
public class P7_Consulta_3 extends javax.swing.JFrame {

    /**
     * Creates new form P7_Consulta_3
     */
    MySqlConn conn = new MySqlConn();

    public P7_Consulta_3() {
        initComponents();
        imagen();
    }

    public void imagen() {
        ImageIcon icono = new ImageIcon("src/imagenes/recibo.png");
        JLabel imagen = new JLabel();
        imagen.setBounds(0, 0, 595, 400);
        imagen.setIcon(new ImageIcon(icono.getImage().getScaledInstance(imagen.getWidth(), imagen.getHeight(), Image.SCALE_SMOOTH)));

        jPanelFondo.add(imagen);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFondo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Registro de ocupacion");
        setPreferredSize(new java.awt.Dimension(595, 400));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Porcentaje de ocupaci贸n");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Regresar");
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Habitaci贸n Sencilla");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Habitaci贸n Doble");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Habitaci贸n Triple");

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Mostrar");
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Mostrar");
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton3MouseExited(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Mostrar");
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton4MouseExited(evt);
            }
        });
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Porcentaje del total ocuapado");
        jButton5.setBorderPainted(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton5MouseExited(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFondoLayout = new javax.swing.GroupLayout(jPanelFondo);
        jPanelFondo.setLayout(jPanelFondoLayout);
        jPanelFondoLayout.setHorizontalGroup(
            jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFondoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(197, 197, 197))
            .addGroup(jPanelFondoLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jButton2)
                .addGap(96, 96, 96)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(76, 76, 76))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFondoLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
            .addGroup(jPanelFondoLayout.createSequentialGroup()
                .addGroup(jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFondoLayout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jButton5))
                    .addGroup(jPanelFondoLayout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelFondoLayout.setVerticalGroup(
            jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(71, 71, 71)
                .addGroup(jPanelFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(54, 54, 54)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
        jButton1.setContentAreaFilled(true);
        jButton1.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        // TODO add your handling code here:
        jButton1.setContentAreaFilled(false);
        jButton1.setForeground(Color.WHITE);
    }//GEN-LAST:event_jButton1MouseExited

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new P7_Consulta_Menu().setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        // TODO add your handling code here:
        jButton2.setContentAreaFilled(true);
        jButton2.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
        // TODO add your handling code here:
        jButton2.setContentAreaFilled(false);
        jButton2.setForeground(Color.WHITE);
    }//GEN-LAST:event_jButton2MouseExited

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        Sencilla();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseEntered
        // TODO add your handling code here:
        jButton3.setContentAreaFilled(true);
        jButton3.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButton3MouseEntered

    private void jButton3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseExited
        // TODO add your handling code here:
        jButton3.setContentAreaFilled(false);
        jButton3.setForeground(Color.WHITE);
    }//GEN-LAST:event_jButton3MouseExited

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Dobles();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseEntered
        // TODO add your handling code here:
        jButton4.setContentAreaFilled(true);
        jButton4.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButton4MouseEntered

    private void jButton4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseExited
        // TODO add your handling code here:
        jButton4.setContentAreaFilled(false);
        jButton4.setForeground(Color.WHITE);
    }//GEN-LAST:event_jButton4MouseExited

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Triple();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseEntered
        // TODO add your handling code here:
        jButton5.setContentAreaFilled(true);
        jButton5.setForeground(Color.BLACK);
    }//GEN-LAST:event_jButton5MouseEntered

    private void jButton5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseExited
        // TODO add your handling code here:
        jButton5.setContentAreaFilled(false);
        jButton5.setForeground(Color.WHITE);
    }//GEN-LAST:event_jButton5MouseExited

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Total();
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(P7_Consulta_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(P7_Consulta_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(P7_Consulta_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(P7_Consulta_3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new P7_Consulta_3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanelFondo;
    // End of variables declaration//GEN-END:variables

    private void Sencilla() {
        //sencillas 9, dobles 10, triples 11
        String query = "select * from habitaciones where Tipo = " + "'" + 1 + "'";
        this.conn.Consult(query);
        int x = 0, dis[] = new int[9], acum = 0;
        float porciento;
        try {
            x = this.conn.rs.getRow();
        } catch (SQLException ex) {
            System.out.println("Error#1...");
            Logger.getLogger(P7_Consulta_3.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println(x);
        if (x != 0) {
            //meto toda la disponibilidad de las habitaciones en un vector
            for (int i = 0; i < dis.length; i++) {
                try {
                    dis[i] = this.conn.rs.getInt(4);
                    this.conn.rs.next();
                } catch (SQLException ex) {
                    System.out.println("Error#2...");
                    Logger.getLogger(P7_Consulta_3.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            for (int i = 0; i < dis.length; i++) {
                if (dis[i] == 0) {
                    acum++;//obtengo el numero de las ocupadas
                }
            }
            porciento = ((acum * 100) / 9);//el porcentaje del %1oo de hab sencillas
            DefaultPieDataset dat = new DefaultPieDataset();
            dat.setValue(porciento+" % ", porciento);
            dat.setValue("Disponible", 100 - porciento);
            JFreeChart chart = ChartFactory.createPieChart("Porcentaje de ocupacion", dat, true, true, false);
            ChartFrame f = new ChartFrame("Habitaciones Sencillas", chart);
            f.pack();
            f.setVisible(true);
        } else {
            System.out.println("Error al obtener los datos de habitaciones sencillas #1");
        }
    }

    private void Dobles() {
        //sencillas 9, dobles 10, triples 11
        String query = "select * from habitaciones where Tipo = " + "'" + 2 + "'";
        this.conn.Consult(query);
        int x = 0, dis[] = new int[10], acum = 0;
        float porciento;
        try {
            x = this.conn.rs.getRow();
        } catch (SQLException ex) {
            System.out.println("Error#1...");
            Logger.getLogger(P7_Consulta_3.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (x != 0) {
            //meto toda la disponibilidad de las habitaciones en un vector
            for (int i = 0; i < dis.length; i++) {
                try {
                    dis[i] = this.conn.rs.getInt(4);
                    this.conn.rs.next();
                } catch (SQLException ex) {
                    System.out.println("Error#2...");
                    Logger.getLogger(P7_Consulta_3.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            for (int i = 0; i < dis.length; i++) {
                if (dis[i] == 0) {
                    acum++;//obtengo el numero de las ocupadas
                }
            }
            porciento = ((acum * 100) / 10);//el porcentaje del %1oo de hab dobles
            DefaultPieDataset dat = new DefaultPieDataset();
            dat.setValue(porciento+" % ", porciento);
            dat.setValue("Disponible", 100 - porciento);
            JFreeChart chart = ChartFactory.createPieChart("Porcentaje de ocupacion", dat, true, true, false);
            ChartFrame f = new ChartFrame("Habitaciones Dobles", chart);
            f.pack();
            f.setVisible(true);
        } else {
            System.out.println("Error al obtener los datos de habitaciones dobles #1");
        }
    }

    private void Triple() {
        //sencillas 9, dobles 10, triples 11
        String query = "select * from habitaciones where Tipo = " + "'" + 3 + "'";
        this.conn.Consult(query);
        int x = 0, dis[] = new int[11], acum = 0;
        float porciento;
        try {
            x = this.conn.rs.getRow();
        } catch (SQLException ex) {
            System.out.println("Error#1...");
            Logger.getLogger(P7_Consulta_3.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (x != 0) {
            //meto toda la disponibilidad de las habitaciones en un vector
            for (int i = 0; i < dis.length; i++) {
                try {
                    dis[i] = this.conn.rs.getInt(4);
                    this.conn.rs.next();
                } catch (SQLException ex) {
                    System.out.println("Error#2...");
                    Logger.getLogger(P7_Consulta_3.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            for (int i = 0; i < dis.length; i++) {
                if (dis[i] == 0) {
                    acum++;//obtengo el numero de las ocupadas
                }
            }
            porciento = ((acum * 100) / 11);//el porcentaje del %1oo de hab sencillas
            DefaultPieDataset dat = new DefaultPieDataset();
            dat.setValue(porciento+" % ", porciento);
            dat.setValue("Disponible", 100 - porciento);
            JFreeChart chart = ChartFactory.createPieChart("Porcentaje de ocupacion", dat, true, true, false);
            ChartFrame f = new ChartFrame("Habitaciones Triples", chart);
            f.pack();
            f.setVisible(true);
        } else {
            System.out.println("Error al obtener los datos de habitaciones triples #1");
        }
    }

    private void Total() {
        //sencillas 9, dobles 10, triples 11
        String query = "select * from habitaciones where Tipo = " + "'" + 1 + "'";
        this.conn.Consult(query);
        int x = 0, disS[] = new int[9], acumS = 0;
        float porciento;
        try {
            x = this.conn.rs.getRow();
        } catch (SQLException ex) {
            System.out.println("Error#1...");
            Logger.getLogger(P7_Consulta_3.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (x != 0) {
            //meto toda la disponibilidad de las habitaciones en un vector
            for (int i = 0; i < disS.length; i++) {
                try {
                    disS[i] = this.conn.rs.getInt(4);
                    this.conn.rs.next();
                } catch (SQLException ex) {
                    System.out.println("Error#2...");
                    Logger.getLogger(P7_Consulta_3.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            for (int i = 0; i < disS.length; i++) {
                if (disS[i] == 0) {
                    acumS++;//obtengo el numero de las ocupadas
                }
            }
        } else {
            System.out.println("Error al obtener los datos de habitaciones sencillas");
        }

        query = "select * from habitaciones where Tipo = " + "'" + 2 + "'";
        this.conn.Consult(query);
        x = 0;
        int disD[] = new int[10], acumD = 0;
        try {
            x = this.conn.rs.getRow();
        } catch (SQLException ex) {
            System.out.println("Error#1...");
            Logger.getLogger(P7_Consulta_3.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (x != 0) {
            //meto toda la disponibilidad de las habitaciones en un vector
            for (int i = 0; i < disD.length; i++) {
                try {
                    disD[i] = this.conn.rs.getInt(4);
                    this.conn.rs.next();
                } catch (SQLException ex) {
                    System.out.println("Error#2...");
                    Logger.getLogger(P7_Consulta_3.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            for (int i = 0; i < disD.length; i++) {
                if (disD[i] == 0) {
                    acumD++;//obtengo el numero de las ocupadas
                }
            }
        } else {
            System.out.println("Error al obtener los datos de habitaciones dobles");
        }
        query = "select * from habitaciones where Tipo = " + "'" + 3 + "'";
        this.conn.Consult(query);
        x = 0;
        int disT[] = new int[10], acumT = 0;
        try {
            x = this.conn.rs.getRow();
        } catch (SQLException ex) {
            System.out.println("Error#1...");
            Logger.getLogger(P7_Consulta_3.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (x != 0) {
            //meto toda la disponibilidad de las habitaciones en un vector
            for (int i = 0; i < disT.length; i++) {
                try {
                    disT[i] = this.conn.rs.getInt(4);
                    this.conn.rs.next();
                } catch (SQLException ex) {
                    System.out.println("Error#2...");
                    Logger.getLogger(P7_Consulta_3.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            for (int i = 0; i < disT.length; i++) {
                if (disT[i] == 0) {
                    acumT++;//obtengo el numero de las ocupadas
                }
            }
        } else {
            System.out.println("Error al obtener los datos de habitaciones dobles");
        }
        /////****************************************************************
        //suma todas las habitaciones ocupada ej = 8 ocupadas de cualquier tipo
        //segun 8 = 100%, saca el porcentaje de cada una, si hubo 2 sencillas seria el 25% y asi sucesivamente
        int tOcu = acumS + acumD + acumT;
        double pS = 0, pD = 0, pT = 0;
        DefaultPieDataset dat = new DefaultPieDataset();
        try {
            pS = ((acumS * 100) / tOcu);//el porcentaje del %1oo de hab sencillas
            pD = ((acumD * 100) / tOcu);//el porcentaje del %1oo de hab dobles
            pT = ((acumT * 100) / tOcu);//el porcentaje del %1oo de hab triples
        } catch (ArithmeticException e) {
            System.out.println("0% de ocupacion");
            pS = 0;
            pD = 0;
            pT = 0;
            dat.setValue("100% Disponibilidad",100);
            
        }

       
        dat.setValue(pS + " % "+" Sencillas", pS);
        dat.setValue(pD +" % " +" Dobles", pD);
        dat.setValue(pT +" % " +" Triple", pT);
        JFreeChart chart = ChartFactory.createPieChart("Porcentaje de ocupacion", dat, true, true, false);
        ChartFrame f = new ChartFrame("Total de habitaciones ocupadas", chart);
        f.pack();
        f.setVisible(true);
    }
}
